
classdef setpoint < ros.Message
    %setpoint MATLAB implementation of movemaster_msg/setpoint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'movemaster_msg/setpoint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'aaa39b4215432c08ac9b36247ded9610' % The MD5 Checksum of the message definition
        PropertyList = { 'Set1' 'Set2' 'Set3' 'Set4' 'Set5' 'SetGRIP' 'EmergencyStop' 'GoHome' } % List of non-constant message properties
        ROSPropertyList = { 'set_1' 'set_2' 'set_3' 'set_4' 'set_5' 'set_GRIP' 'emergency_stop' 'GoHome' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Set1
        Set2
        Set3
        Set4
        Set5
        SetGRIP
        EmergencyStop
        GoHome
    end
    methods
        function set.Set1(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'Set1');
            obj.Set1 = single(val);
        end
        function set.Set2(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'Set2');
            obj.Set2 = single(val);
        end
        function set.Set3(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'Set3');
            obj.Set3 = single(val);
        end
        function set.Set4(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'Set4');
            obj.Set4 = single(val);
        end
        function set.Set5(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'Set5');
            obj.Set5 = single(val);
        end
        function set.SetGRIP(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'SetGRIP');
            obj.SetGRIP = logical(val);
        end
        function set.EmergencyStop(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'EmergencyStop');
            obj.EmergencyStop = logical(val);
        end
        function set.GoHome(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'setpoint', 'GoHome');
            obj.GoHome = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.movemaster_msg.setpoint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.movemaster_msg.setpoint(strObj);
        end
    end
end
